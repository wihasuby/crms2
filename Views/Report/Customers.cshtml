@model IEnumerable<crms2.Customers.Models.CustomerModel>
@{
    ViewData["Title"] = "Customers";
}

<h2>Customers</h2>

<!-- Search Input Fields -->
<div class="form-group">
    <input type="text" id="searchInput" placeholder="Search by Name" class="form-control" />
    <input type="number" id="spendingInput" placeholder="Minimum Total Spending" class="form-control" />
    <button onclick="searchCustomers()" class="btn btn-primary">Search</button>
</div>

<!-- Customers Table -->
<table class="table table-striped" id="customersTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Phone Number</th>
            <th>Total Spending</th>
        </tr>
    </thead>
    <tbody id="customersBody">
        <!-- Table rows will be populated dynamically by JavaScript -->
    </tbody>
</table>

<!-- JavaScript for Server-Side Search -->
<script>
    async function searchCustomers() {
        const nameFilter = document.getElementById('searchInput').value;
        const spendingThreshold = document.getElementById('spendingInput').value || 0;
        const url = `/api/customers/search?name=${encodeURIComponent(nameFilter)}&spendingThreshold=${encodeURIComponent(spendingThreshold)}`;

        try {
            const response = await fetch(url);

            if (!response.ok) {
                console.error("Failed to fetch customers.");
                document.getElementById('customersBody').innerHTML = '<tr><td colspan="4">No customers found.</td></tr>';
                return;
            }

            const customers = await response.json();
            const customersBody = document.getElementById('customersBody');
            customersBody.innerHTML = ''; // Clear previous results

            if (customers.length === 0) {
                customersBody.innerHTML = '<tr><td colspan="4">No customers found.</td></tr>';
                return;
            }

            // Populate the table with customer data
            customers.forEach(customer => {
                const row = `
                        <tr>
                            <td>${customer.name}</td>
                            <td>${customer.email}</td>
                            <td>${customer.phoneNumber}</td>
                            <td>${customer.totalSpending.toFixed(2)}</td>
                        </tr>
                    `;
                customersBody.innerHTML += row;
            });
        } catch (error) {
            console.error("Error fetching customers:", error);
            document.getElementById('customersBody').innerHTML = '<tr><td colspan="4">Error fetching data.</td></tr>';
        }
    }

    // Trigger search when input changes
    document.getElementById('searchInput').addEventListener('input', searchCustomers);
    document.getElementById('spendingInput').addEventListener('input', searchCustomers);
</script>
